{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Canvas","text":"<p>\"The art of programming is the art of organizing complexity, of mastering details and of striking a balance between conflicting objectives.\" \u2014 Donald E. Knuth</p> <p>A simple, flexible, and modular canvas for designing your deep learning projects. Powered by PyTorch + Hydra, Canvas aims to provide a unified template for all kinds of machine learning projects.</p> <p> </p>"},{"location":"#available-templates","title":"Available Templates","text":"<p>Canvas offers unique templates to kickstart various machine learning tasks:</p> <ul> <li> <p>Supervised Learning (SL): For tasks like classification and regression with labeled data. Example - ResNet for Image Classification.</p> </li> <li> <p>Self-Supervised Learning (SSL): For training models to learn representations from unlabeled data. Example - Next-word Prediction using GPT.</p> </li> <li> <p>Reinforcement Learning (RL):  For building agents that learn by interacting with an environment. Example - PPO on Gymnasium Environment.</p> </li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Canvas requires Python 3.11+. Since it's a command-line tool, we highly recommend using uv or pipx for installation.</p> <pre><code># with uv (Recommended)\nuv tool install canvas-template\n\n# with pipx\npipx install canvas-template\n\n# with pip\npip install canvas-template\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>To create a new project, simply run the <code>canvas init</code> command and select your template. Canvas will automatically create the project directory for you.</p> <pre><code>canvas init [sl|ssl|rl]\n</code></pre> <p>Example: The following command will create a project named my_project using the self-supervised learning (SSL) template.</p> <p> </p>"},{"location":"#running-the-project","title":"Running the Project","text":"<p>Once your project is created, you can use the included <code>Makefile</code> to run common tasks.</p> <pre><code># Install dependencies\nmake install\n\n# Start model training\nmake train\n</code></pre>"},{"location":"#directory-structure","title":"Directory Structure","text":"<p>The structure of your new project will look something like this (depending on the settings that you choose):</p> <pre><code>example-project/\n\u251c\u2500\u2500 Makefile                # Convenient make commands\n\u251c\u2500\u2500 LICENSE                 # Project license\n\u251c\u2500\u2500 README.md               # Your project's main README file\n\u251c\u2500\u2500 mkdocs.yml              # Configuration for building documentation\n\u251c\u2500\u2500 pyproject.toml          # Project metadata and dependencies\n\u251c\u2500\u2500 uv.lock                 # uv lock file for consistent environments\n\u251c\u2500\u2500 docs/                   # Where your project's documentation lives\n\u2502   \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 src/                    # All the source code for your deep learning project\n\u2502   \u251c\u2500\u2500 main.py             # The main entry point of your project\n\u2502   \u251c\u2500\u2500 config/             # Hydra configuration files for managing settings\n\u2502   \u2502   \u2514\u2500\u2500 config.yaml\n\u2502   \u251c\u2500\u2500 model/              # Core deep learning model definitions\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 model.py\n\u2502   \u2502   \u251c\u2500\u2500 network.py\n\u2502   \u2502   \u2514\u2500\u2500 loss.py\n\u2502   \u251c\u2500\u2500 data/               # Scripts for loading and preparing your data\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 data.py\n\u2502   \u2502   \u2514\u2500\u2500 preprocess.py\n\u2502   \u2514\u2500\u2500 algorithm/          # Training and evaluation algorithms\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 trainer.py\n\u2502       \u2514\u2500\u2500 evaluator.py\n\u251c\u2500\u2500 dataset/                # Place your raw or processed datasets here\n\u2502   \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 outputs/                # Where hydra logs, model checkpoints, and results are saved\n    \u2514\u2500\u2500 ...\n</code></pre>"},{"location":"contributing/","title":"Contributing","text":"<p>If you have bug fixes, new features, or any improvements, your contributions are highly appreciated! Please refer to the CONTRIBUTING.md file for guidelines on how to get involved.</p>"}]}